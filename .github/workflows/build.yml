name: Build PopcornTimeTV

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Xcode Select
      run: |
        sudo xcode-select -s /Applications/$(ls /Applications | grep -E '^Xcode.*\.app$' | sort -rV | head -n 1)
        sudo xcodebuild -license accept

    - name: Use cache
      id: cache
      uses: actions/cache@v2
      with:
        path: Frameworks
        key: ${{ runner.os }}-${{ hashFiles('Podfile') }}-${{ hashFiles('Gemfile') }}

    - name: Get dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        gem install bundler
        bundle install
        pod repo update
        pod install

    - name: Build the Xcode Project
      run: |
        set -o pipefail && \
        xcodebuild archive \
        -project PopcornTime.xcodeproj \
        -scheme PopcornTimetvOS \
        -sdk appletvos \
        -configuration Debug \
        -archivePath $RUNNER_TEMP/popcorntime.xcarchive \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGNING_ALLOWED=NO \
        APPLICATION_EXTENSION_API_ONLY=YES \
        CODE_SIGN_IDENTITY='' \
        TVOS_DEPLOYMENT_TARGET=12.0 \
        | tee build.log | xcpretty


    - name: generate unsigned debug ipa
      run: |
        cd ~
        mkdir Payload
        mv ~/Library/Developer/Xcode/Archives/*/*/Products/Applications/*.app ~/Payload/
        zip -r PopcornTime.ipa Payload

    - name: Find and upload build log
      id: upload-build-log
      run: |
        # Search for the build.log file
        find . -name 'build.log' -print > build_log_path.txt
        # Check if the file exists and upload it
        if [ -s build_log_path.txt ]; then
          build_log_path=$(cat build_log_path.txt)
          echo "Found build.log at $build_log_path"
          cp "$build_log_path" build.log
        else
          echo "build.log not found."
        fi
      continue-on-error: true

    - name: Upload build log
      uses: actions/upload-artifact@v2
      with:
        name: 'build-log'
        path: build.log

    - name: upload ipa
      uses: actions/upload-artifact@v2.2.0
      with:
        name: 'PopcornTimeTV'
        path: ~/PopcornTime.ipa
